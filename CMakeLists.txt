if(NOT WIN32)
	cmake_minimum_required(VERSION 3.20)
	project(editor VERSION 0.0.1 LANGUAGES C CXX)
	set(CMAKE_CXX_COMPILER /usr/bin/g++)
	set(CMAKE_CXX_FLAGS "-std=gnu++2a")

	find_package(yaml-cpp REQUIRED)
	find_package(Boost COMPONENTS REQUIRED filesystem system)
	set(Boost_USE_STATIC_LIBS OFF)
	set(Boost_USE_MULTITHREADED ON)
	set(Boost_USE_STATIC_RUNTIME OFF)

	message("Added yaml-cpp lib")
	include_directories(${YAML_CPP_INCLUDE_DIRS})
	include_directories(${Boost_INCLUDE_DIRS})
	add_executable(main main.cpp internal/keys/keys.cpp internal/colors/colors.cpp internal/commands/set_color/set_color.cpp internal/margin/margin.cpp internal/states/command/command.cpp internal/commands/pool.cpp internal/commands/w/w.cpp internal/bufs/bufs.cpp internal/commands/search/search.cpp internal/states/common/common.cpp internal/states/insert/insert.cpp internal/states/pool/pool.cpp internal/states/search/search.cpp internal/history/history.cpp internal/position/position.cpp internal/term_flags/term_flags.cpp internal/files/helper/helper.cpp internal/files/exec/exec.cpp internal/files/config/config.cpp internal/render/render.cpp internal/status/status.cpp internal/files/log/log.cpp)
	target_link_libraries(main ${YAML_CPP_LIBRARIES} ${Boost_FILESYSTEM_LIBRARIES} ${Boost_SYSTEM_LIBRARIES})

	if(NOT APPLE)
		target_link_libraries(main ncurses stdc++fs)
	else()
    	target_link_libraries(main ncurses)
	endif()
	if (NOT EXISTS $ENV{HOME}/.sye_configs)
		file(MAKE_DIRECTORY $ENV{HOME}/.sye_configs)	
	endif()
	file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/syntax_configs/. DESTINATION $ENV{HOME}/.sye_configs)
else()
	message("You mustn't you the worst os in the world to install this perfect editor")
endif()
